
x-env: &base-env
  TEST_PATHS_REGEX: .*\/*.test.test
  ENVIRONMENT: dev
  DEBUG: 'true'
  DB_MOVIE: 'magic_db'
  DB_HOST: 'localhost'
  DB_PORT: '5432'
  DB_USER: 'postgres'
  DB_PASSWORD: '1234secure&D3'

services:
  test: 
    build: *base-build
    volumes:
      - ../:/app/
    environment:
      <<: *base-env
      SCRIPT: test
    env_file: ../.env
    depends_on:
      - database
    platform: 'linux/amd64'
    command: ["npm", "run", 'test']

  test-coverage:
    build: *base-build
    volumes:
        - ../:/app
    environment:
      <<: *base-env
      SCRIPT: test:coverage
    env_file: ../.env
    depends_on:
      - database
    platform: 'linux/amd64'
    command:
      - npm
      - run
      - test:coverage

  test-coverage-ci:
    build:
      <<: *base-build
      dockerfile: docker/ci.dockerfile
    volumes:
        - ../:/app
    environment:
      <<: *base-env
      SCRIPT: test:coverage
    env_file: ../.env
    depends_on:
      - database
    platform: 'linux/amd64'
    command:
      - npm
      - run
      - test:coverage:ci

  test-watch:
    build:
      <<: *base-build
      dockerfile: docker/ci.dockerfile
    volumes:
        - ../:/app
        - ../:/app/node_modules
    environment:
      <<: *base-env
      SCRIPT: test:coverage
    env_file: ../.env
    depends_on:
      - database
    platform: 'linux/amd64'
    command:
      - npm
      - run
      - test:watch
      
  database:
    image: 'postgres:17'
    ports:
      - 5432:5432
    environment:
        ENVIRONMENT: dev
        DEBUG: 'true'
        DB_MOVIE: 'magic_db'
        DB_HOST: 'localhost'
        DB_PORT: '5432'
        DB_USER: 'postgres'
        DB_PASSWORD: '1234secure&D3'
    restart: always
    platform: 'linux/amd64'
    volumes:
      - ./db/postgres_data:/var/lib/postgresql/data/

volumes:
  database-data: